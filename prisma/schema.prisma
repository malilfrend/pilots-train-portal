generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("STORAGE_DATABASE_URL")
  directUrl = env("STORAGE_DATABASE_URL")
}

enum UserRole {
  PILOT
  INSTRUCTOR
  SUPER_ADMIN
}

enum AssessmentType {
  EVAL
  QUALIFICATION
  AVIATION_EVENT
  FLIGHT_DATA_ANALYSIS
}

enum CompetencyCode {
  APK
  COM
  FPA
  FPM
  LTW
  PSD
  SAW
  WLM
  KNO
}

model User {
  id            Int           @id @default(autoincrement())
  email         String        @unique
  password      String
  firstName     String
  lastName      String
  birthDate     DateTime
  university    String?
  company       String?
  experience    String?       // Опыт работы
  position      String?       // Должность
  role          UserRole      @default(PILOT)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  comments      Comment[]
  assessments   Assessment[]  // Оценки пользователя
}

model Assessment {
  id                Int                 @id @default(autoincrement())
  type              AssessmentType
  date              DateTime
  user              User                @relation(fields: [userId], references: [id])
  userId            Int
  instructorComment String?
  competencyScores  CompetencyScore[]
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
}

model CompetencyScore {
  id             Int           @id @default(autoincrement())
  competencyCode CompetencyCode
  score          Int
  assessment     Assessment    @relation(fields: [assessmentId], references: [id], onDelete: Cascade)
  assessmentId   Int
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Session {
  id          Int       @id @default(autoincrement())
  number      Int       // Номер сессии (1-6)
  title       String    // Название сессии
  description String    // Описание сессии
  exercises   Exercise[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Exercise {
  id          Int       @id @default(autoincrement())
  title       String    // Название упражнения
  description String    // Описание упражнения
  session     Session   @relation(fields: [sessionId], references: [id])
  sessionId   Int
  comments    Comment[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Comment {
  id         Int      @id @default(autoincrement())
  content    String
  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId Int
  author     User     @relation(fields: [authorId], references: [id])
  authorId   Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}